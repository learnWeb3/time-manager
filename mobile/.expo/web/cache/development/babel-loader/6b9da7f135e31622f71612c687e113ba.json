{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Provider } from 'react-redux';\nimport stores from \"./stores\";\nimport react, { useCallback } from 'react';\nimport AuthLoader from \"./components/AuthLoader\";\nimport { MD3LightTheme as DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport AuthenticationRouter from \"./components/AuthenticationRouter\";\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: \"#001f54\",\n    secondary: '#fefcfb'\n  })\n});\nexport default function App() {\n  var _useFonts = useFonts({\n      'Poppins-Black': require(\"./assets/fonts/Poppins-Black.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(Provider, {\n    store: stores,\n    children: [_jsx(AuthLoader, {}), _jsxs(PaperProvider, {\n      theme: theme,\n      children: [_jsx(Text, {\n        style: {\n          fontFamily: 'Poppins-Black',\n          fontSize: 60\n        },\n        children: \"Inter Black\"\n      }), _jsx(AuthenticationRouter, {})]\n    })]\n  });\n}","map":{"version":3,"names":["Provider","stores","react","useCallback","AuthLoader","MD3LightTheme","DefaultTheme","PaperProvider","AuthenticationRouter","useFonts","SplashScreen","preventAutoHideAsync","theme","colors","primary","secondary","App","require","fontsLoaded","onLayoutRootView","hideAsync","fontFamily","fontSize"],"sources":["C:/Users/lahce/Desktop/epitech2023/pool/time-manager-/mobile/App.js"],"sourcesContent":["import { Provider } from 'react-redux';\r\nimport stores from './stores';\r\nimport react, {useCallback} from 'react'\r\nimport AuthLoader from './components/AuthLoader';\r\nimport { MD3LightTheme as DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\r\nimport AuthenticationRouter from './components/AuthenticationRouter';\r\nimport { useFonts } from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nSplashScreen.preventAutoHideAsync();\r\n\r\nconst theme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    primary: \"#001f54\",\r\n    secondary: '#fefcfb'\r\n  },\r\n};\r\n\r\nexport default function App() {\r\n  const [fontsLoaded] = useFonts({\r\n    'Poppins-Black': require('./assets/fonts/Poppins-Black.ttf'),\r\n  });\r\n\r\n  const onLayoutRootView = useCallback(async () => {\r\n    if (fontsLoaded) {\r\n      await SplashScreen.hideAsync();\r\n    }\r\n  }, [fontsLoaded]);\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Provider store={stores}>\r\n      <AuthLoader />\r\n      <PaperProvider theme={theme}>\r\n        <Text style={{ fontFamily: 'Poppins-Black', fontSize: 60 }}>Inter Black</Text>\r\n        <AuthenticationRouter />\r\n\r\n      </PaperProvider>\r\n    </Provider>\r\n  );\r\n}"],"mappings":";;;;;AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,OAAOC,MAAM;AACb,OAAOC,KAAK,IAAGC,WAAW,QAAO,OAAO;AACxC,OAAOC,UAAU;AACjB,SAASC,aAAa,IAAIC,YAAY,EAAEN,QAAQ,IAAIO,aAAa,QAAQ,oBAAoB;AAC7F,OAAOC,oBAAoB;AAC3B,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAAC;AAAA;AAEnDA,YAAY,CAACC,oBAAoB,EAAE;AAEnC,IAAMC,KAAK,mCACNN,YAAY;EACfO,MAAM,kCACDP,YAAY,CAACO,MAAM;IACtBC,OAAO,EAAE,SAAS;IAClBC,SAAS,EAAE;EAAS;AACrB,EACF;AAED,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAAsBP,QAAQ,CAAC;MAC7B,eAAe,EAAEQ,OAAO;IAC1B,CAAC,CAAC;IAAA;IAFKC,WAAW;EAIlB,IAAMC,gBAAgB,GAAGhB,WAAW,mBAAC,aAAY;IAC/C,IAAIe,WAAW,EAAE;MACf,MAAMR,YAAY,CAACU,SAAS,EAAE;IAChC;EACF,CAAC,GAAE,CAACF,WAAW,CAAC,CAAC;EACjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACE,MAAC,QAAQ;IAAC,KAAK,EAAEjB,MAAO;IAAA,WACtB,KAAC,UAAU,KAAG,EACd,MAAC,aAAa;MAAC,KAAK,EAAEW,KAAM;MAAA,WAC1B,KAAC,IAAI;QAAC,KAAK,EAAE;UAAES,UAAU,EAAE,eAAe;UAAEC,QAAQ,EAAE;QAAG,CAAE;QAAA;MAAA,EAAmB,EAC9E,KAAC,oBAAoB,KAAG;IAAA,EAEV;EAAA,EACP;AAEf"},"metadata":{},"sourceType":"module"}