{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Text } from 'react-native-paper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { validateEmail, validatePassword, validateRequired } from \"../../validators/index\";\nimport InputGroup from \"../InputGroup/index\";\nimport { useAlert } from \"../../hooks/alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ProfileForm = function ProfileForm() {\n  var dispatch = useDispatch();\n  var currentUser = useSelector(function (state) {\n    return state.currentUser.value;\n  });\n  var _useAlert = useAlert(),\n    alert = _useAlert.alert,\n    setAlert = _useAlert.setAlert,\n    Snackbar = _useAlert.component;\n  var _React$useState = React.useState({\n      isError: true,\n      value: \"\",\n      errors: validateEmail(\"email\", \"\").errors\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var _React$useState3 = React.useState({\n      isError: false,\n      value: \"\",\n      errors: validateRequired(\"username\", \"\").errors\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    username = _React$useState4[0],\n    setUsername = _React$useState4[1];\n  var _React$useState5 = React.useState({\n      isError: false,\n      value: \"\",\n      errors: validatePassword(\"password\", \"\").errors\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    password = _React$useState6[0],\n    setPassword = _React$useState6[1];\n  React.useEffect(function () {\n    if (currentUser) {\n      setEmail({\n        errors: [],\n        isError: false,\n        value: currentUser.user.email\n      });\n      setUsername({\n        errors: [],\n        isError: false,\n        value: currentUser.user.username\n      });\n    }\n  }, [currentUser]);\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var message = \"\";\n      var severity = \"error\";\n      var data = {\n        email: email.value,\n        password: password.value\n      };\n      try {\n        if (currentUser) {\n          message = \"Profile updated with success\";\n          severity = \"success\";\n        } else {\n          throw new Error('current user must be set to perform authenticated http request');\n        }\n      } catch (error) {\n        message = \"An unexpected error has been encountered, please try again later or contact tour administrator\";\n      } finally {\n        setAlert({\n          toggled: true,\n          message: message,\n          severity: severity\n        });\n      }\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleEmail = function handleEmail(email) {\n    var _validateEmail = validateEmail(\"email\", email),\n      emailIsValid = _validateEmail.isValid,\n      emailValidationsErrors = _validateEmail.errors;\n    setEmail({\n      isError: emailIsValid,\n      value: email,\n      errors: emailValidationsErrors\n    });\n  };\n  var handlePassword = function handlePassword(password) {\n    var _validatePassword = validatePassword(\"password\", password),\n      passwordIsValid = _validatePassword.isValid,\n      passwordValidationsErrors = _validatePassword.errors;\n    setPassword({\n      isError: passwordIsValid,\n      value: password,\n      errors: passwordValidationsErrors\n    });\n  };\n  var handleUsername = function handleUsername(username) {\n    var _validateRequired = validateRequired(\"username\", username),\n      usernameIsValid = _validateRequired.isValid,\n      usernameValidationsErrors = _validateRequired.errors;\n    setUsername({\n      isError: usernameIsValid,\n      value: username,\n      errors: usernameValidationsErrors\n    });\n  };\n  var handleCloseAlert = function handleCloseAlert() {\n    setAlert({\n      toggled: false,\n      message: \"\",\n      severity: \"error\"\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.header,\n        variant: \"headlineMedium\",\n        children: \"User details\"\n      }), _jsx(InputGroup, {\n        label: \"Username\",\n        isError: username.isError,\n        errors: username.errors,\n        value: username.value,\n        handleInput: function handleInput(username) {\n          return handleUsername(username);\n        }\n      }), _jsx(InputGroup, {\n        label: \"Email\",\n        isError: email.isError,\n        errors: email.errors,\n        value: email.value,\n        handleInput: function handleInput(email) {\n          return handleEmail(email);\n        }\n      }), _jsx(InputGroup, {\n        label: \"Password\",\n        isError: password.isError,\n        errors: password.errors,\n        value: password.value,\n        handleInput: function handleInput(password) {\n          return handlePassword(password);\n        },\n        secureTextEntry: true\n      }), _jsx(Button, {\n        disabled: username.isError || email.isError || password.isError,\n        mode: \"contained\",\n        onPress: handleSubmit,\n        children: \"ok\"\n      })]\n    }), _jsx(Snackbar, {\n      onClose: handleCloseAlert,\n      toggled: alert.toggled,\n      message: alert.message,\n      severity: alert.severity\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  header: {\n    marginBottom: 24\n  },\n  container: {\n    width: \"100%\",\n    padding: 24\n  }\n});\nexport default ProfileForm;","map":{"version":3,"names":["React","Button","Text","useDispatch","useSelector","validateEmail","validatePassword","validateRequired","InputGroup","useAlert","ProfileForm","dispatch","currentUser","state","value","alert","setAlert","Snackbar","component","useState","isError","errors","email","setEmail","username","setUsername","password","setPassword","useEffect","user","handleSubmit","message","severity","data","Error","error","toggled","handleEmail","emailIsValid","isValid","emailValidationsErrors","handlePassword","passwordIsValid","passwordValidationsErrors","handleUsername","usernameIsValid","usernameValidationsErrors","handleCloseAlert","styles","container","header","StyleSheet","create","marginBottom","width","padding"],"sources":["/Users/antoine/Documents/EPITECH/time-manager-/mobile/components/ProfileForm/index.js"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Button, Text } from 'react-native-paper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { validateEmail, validatePassword, validateRequired } from '../../validators/index';\nimport InputGroup from '../InputGroup/index';\nimport { useAlert } from '../../hooks/alert';\n\nconst ProfileForm = () => {\n\n    const dispatch = useDispatch()\n    const currentUser = useSelector((state) => state.currentUser.value);\n    const { alert, setAlert, component: Snackbar } = useAlert()\n    const [email, setEmail] = React.useState({\n        isError: true,\n        value: \"\",\n        errors: validateEmail(\"email\", \"\").errors\n    })\n    const [username, setUsername] = React.useState({\n        isError: false,\n        value: \"\",\n        errors: validateRequired(\"username\", \"\").errors\n    })\n    const [password, setPassword] = React.useState({\n        isError: false,\n        value: \"\",\n        errors: validatePassword(\"password\", \"\").errors\n    })\n\n    React.useEffect(() => {\n        if (currentUser) {\n            setEmail({\n                errors: [],\n                isError: false,\n                value: currentUser.user.email\n            })\n\n            setUsername({\n                errors: [],\n                isError: false,\n                value: currentUser.user.username\n            })\n        }\n    }, [currentUser])\n\n    const handleSubmit = async () => {\n\n        let message = \"\";\n        let severity = \"error\"\n        const data = {\n            email: email.value,\n            password: password.value,\n        }\n\n        try {\n            if (currentUser) {\n                message = \"Profile updated with success\";\n                severity = \"success\";\n            } else {\n                throw new Error('current user must be set to perform authenticated http request')\n            }\n        } catch (error) {\n            message = \"An unexpected error has been encountered, please try again later or contact tour administrator\"\n        } finally {\n            setAlert({\n                toggled: true,\n                message,\n                severity\n            })\n        }\n    }\n\n    const handleEmail = (email) => {\n        const {\n            isValid: emailIsValid,\n            errors: emailValidationsErrors\n        } = validateEmail(\"email\", email)\n        setEmail({\n            isError: emailIsValid,\n            value: email,\n            errors: emailValidationsErrors,\n        })\n    }\n\n\n    const handlePassword = (password) => {\n        const {\n            isValid: passwordIsValid,\n            errors: passwordValidationsErrors\n        } = validatePassword(\"password\", password)\n        setPassword({\n            isError: passwordIsValid,\n            value: password,\n            errors: passwordValidationsErrors,\n        })\n    }\n\n    const handleUsername = (username) => {\n        const {\n            isValid: usernameIsValid,\n            errors: usernameValidationsErrors\n        } = validateRequired(\"username\", username)\n        setUsername({\n            isError: usernameIsValid,\n            value: username,\n            errors: usernameValidationsErrors,\n        })\n    }\n\n\n    const handleCloseAlert = () => {\n        setAlert({\n            toggled: false,\n            message: \"\",\n            severity: \"error\"\n        })\n    }\n\n    return (\n        <>\n            <View style={styles.container}>\n                <Text style={styles.header} variant=\"headlineMedium\">User details</Text>\n\n                <InputGroup\n                    label={\"Username\"}\n                    isError={username.isError}\n                    errors={username.errors}\n                    value={username.value}\n                    handleInput={username => handleUsername(username)}\n                />\n\n                <InputGroup\n                    label={\"Email\"}\n                    isError={email.isError}\n                    errors={email.errors}\n                    value={email.value}\n                    handleInput={email => handleEmail(email)}\n                />\n\n                <InputGroup\n                    label={\"Password\"}\n                    isError={password.isError}\n                    errors={password.errors}\n                    value={password.value}\n                    handleInput={password => handlePassword(password)}\n                    secureTextEntry={true}\n                />\n\n                <Button disabled={username.isError || email.isError || password.isError} mode=\"contained\" onPress={handleSubmit}>\n                    ok\n                </Button>\n\n            </View>\n\n            <Snackbar onClose={handleCloseAlert} toggled={alert.toggled} message={alert.message} severity={alert.severity} />\n\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    header: {\n        marginBottom: 24\n    },\n    container: {\n        width: \"100%\",\n        padding: 24\n    },\n});\n\nexport default ProfileForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}