{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ScheduledWorkingTimesSum = function ScheduledWorkingTimesSum(_ref) {\n  var scheduleWithWorkingTimes = _ref.scheduleWithWorkingTimes;\n  var schedules = useSelector(function (state) {\n    return state.schedules.value;\n  });\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formattedSchedules = _React$useState2[0],\n    setFormattedSchedules = _React$useState2[1];\n  var formatSchedules = function formatSchedules(schedules, workingtimes) {\n    var workingtimesbyschedules = workingtimes.reduce(function (mappingObject, workingtime) {\n      mappingObject[workingtime.schedule_id] = workingtime;\n      return mappingObject;\n    }, {});\n    return schedules.map(function (schedule) {\n      return _objectSpread(_objectSpread({}, schedule), {}, {\n        workingtime: workingtimesbyschedules[schedule.id]\n      });\n    });\n  };\n  var calculateWorkigTimeSum = function calculateWorkigTimeSum(scheduleWithWorkingTimes) {\n    return scheduleWithWorkingTimes.reduce(function (sum, schedule) {\n      if (schedule.workingtime) {\n        var shiftDuration = schedule.endhour + schedule.endminute / 60 - (schedule.starthour + schedule.startminute / 60);\n        return sum + shiftDuration;\n      }\n      return sum;\n    }, 0);\n  };\n  return _jsx(Text, {\n    children: calculateWorkigTimeSum(scheduleWithWorkingTimes)\n  });\n};\nexport default ScheduledWorkingTimesSum;","map":{"version":3,"names":["React","Text","ScheduledWorkingTimesSum","scheduleWithWorkingTimes","schedules","useSelector","state","value","useState","formattedSchedules","setFormattedSchedules","formatSchedules","workingtimes","workingtimesbyschedules","reduce","mappingObject","workingtime","schedule_id","map","schedule","id","calculateWorkigTimeSum","sum","shiftDuration","endhour","endminute","starthour","startminute"],"sources":["/Users/antoine/Documents/EPITECH/time-manager-/mobile/components/ScheduledWorkingTimesSum/index.js"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper';\n\nconst ScheduledWorkingTimesSum = ({ scheduleWithWorkingTimes }) => {\n\n\n    const schedules = useSelector((state) => state.schedules.value);\n    const [formattedSchedules, setFormattedSchedules] = React.useState([])\n\n    const formatSchedules = (schedules, workingtimes) => {\n        const workingtimesbyschedules = workingtimes.reduce((mappingObject, workingtime) => {\n            mappingObject[workingtime.schedule_id] = workingtime;\n            return mappingObject\n        }, {})\n        return schedules.map((schedule) => ({\n            ...schedule,\n            workingtime: workingtimesbyschedules[schedule.id],\n        }))\n    }\n\n    const calculateWorkigTimeSum = (scheduleWithWorkingTimes) => {\n        return scheduleWithWorkingTimes.reduce((sum, schedule) => {\n            if (schedule.workingtime) {\n                const shiftDuration = (schedule.endhour + (schedule.endminute / 60)) - (schedule.starthour + (schedule.startminute / 60))\n                return sum + shiftDuration\n            }\n            return sum\n        }, 0)\n    }\n\n\n    return <Text>\n        {calculateWorkigTimeSum(scheduleWithWorkingTimes)}\n    </Text>\n}\n\nexport default ScheduledWorkingTimesSum"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE/B,SAASC,IAAI,QAAQ,oBAAoB;AAAC;AAE1C,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwB,OAAqC;EAAA,IAA/BC,wBAAwB,QAAxBA,wBAAwB;EAGxD,IAAMC,SAAS,GAAGC,WAAW,CAAC,UAACC,KAAK;IAAA,OAAKA,KAAK,CAACF,SAAS,CAACG,KAAK;EAAA,EAAC;EAC/D,sBAAoDP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/DC,kBAAkB;IAAEC,qBAAqB;EAEhD,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIP,SAAS,EAAEQ,YAAY,EAAK;IACjD,IAAMC,uBAAuB,GAAGD,YAAY,CAACE,MAAM,CAAC,UAACC,aAAa,EAAEC,WAAW,EAAK;MAChFD,aAAa,CAACC,WAAW,CAACC,WAAW,CAAC,GAAGD,WAAW;MACpD,OAAOD,aAAa;IACxB,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,OAAOX,SAAS,CAACc,GAAG,CAAC,UAACC,QAAQ;MAAA,uCACvBA,QAAQ;QACXH,WAAW,EAAEH,uBAAuB,CAACM,QAAQ,CAACC,EAAE;MAAC;IAAA,CACnD,CAAC;EACP,CAAC;EAED,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIlB,wBAAwB,EAAK;IACzD,OAAOA,wBAAwB,CAACW,MAAM,CAAC,UAACQ,GAAG,EAAEH,QAAQ,EAAK;MACtD,IAAIA,QAAQ,CAACH,WAAW,EAAE;QACtB,IAAMO,aAAa,GAAIJ,QAAQ,CAACK,OAAO,GAAIL,QAAQ,CAACM,SAAS,GAAG,EAAG,IAAKN,QAAQ,CAACO,SAAS,GAAIP,QAAQ,CAACQ,WAAW,GAAG,EAAG,CAAC;QACzH,OAAOL,GAAG,GAAGC,aAAa;MAC9B;MACA,OAAOD,GAAG;IACd,CAAC,EAAE,CAAC,CAAC;EACT,CAAC;EAGD,OAAO,KAAC,IAAI;IAAA,UACPD,sBAAsB,CAAClB,wBAAwB;EAAC,EAC9C;AACX,CAAC;AAED,eAAeD,wBAAwB"},"metadata":{},"sourceType":"module"}