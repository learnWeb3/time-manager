{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ApplicationLineChart from \"../LineChart/index\";\nimport { useSelector } from 'react-redux';\nimport { getUserPresences } from \"../../http/api\";\nimport { Button } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard() {\n  var currentUser = useSelector(function (state) {\n    return state.currentUser.value;\n  });\n  var viewContainerRef = React.useRef(null);\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    presenceData = _React$useState2[0],\n    setPresenceData = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    viewContainerWidth = _React$useState4[0],\n    setViewContainerWidth = _React$useState4[1];\n  var _React$useState5 = React.useState(\"day\"),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    selectedPeriodicity = _React$useState6[0],\n    setSelectedPeriodicity = _React$useState6[1];\n  React.useEffect(function () {\n    if (currentUser && selectedPeriodicity) {\n      getUserPresences(currentUser.token, currentUser.user.id, selectedPeriodicity).then(function (data) {\n        return setPresenceData(data.data);\n      });\n    }\n  }, [currentUser, selectedPeriodicity]);\n  React.useEffect(function () {\n    if (viewContainerRef) {\n      var _viewContainerRef$cur = viewContainerRef.current.getBoundingClientRect(),\n        width = _viewContainerRef$cur.width;\n      setViewContainerWidth(width);\n    }\n  }, [viewContainerRef]);\n  return _jsxs(View, {\n    ref: viewContainerRef,\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.filterContainer,\n      children: [_jsx(Button, {\n        color: \"primary\",\n        style: {\n          marginRight: 8,\n          marginBottom: 8\n        },\n        mode: selectedPeriodicity === \"day\" ? \"contained\" : \"outlined\",\n        onPress: function onPress() {\n          return setSelectedPeriodicity(\"day\");\n        },\n        children: \"day\"\n      }), _jsx(Button, {\n        style: {\n          marginRight: 8,\n          marginBottom: 8\n        },\n        mode: selectedPeriodicity === \"week\" ? \"contained\" : \"outlined\",\n        onPress: function onPress() {\n          return setSelectedPeriodicity(\"week\");\n        },\n        children: \"week\"\n      }), _jsx(Button, {\n        style: {\n          marginRight: 8,\n          marginBottom: 8\n        },\n        mode: selectedPeriodicity === \"month\" ? \"contained\" : \"outlined\",\n        onPress: function onPress() {\n          return setSelectedPeriodicity(\"month\");\n        },\n        children: \"month\"\n      }), _jsx(Button, {\n        style: {\n          marginRight: 8,\n          marginBottom: 8\n        },\n        mode: selectedPeriodicity === \"year\" ? \"contained\" : \"outlined\",\n        onPress: function onPress() {\n          return setSelectedPeriodicity(\"year\");\n        },\n        children: \"year\"\n      })]\n    }), viewContainerWidth && presenceData && _jsx(ApplicationLineChart, {\n      legend: ['Presence time'],\n      labels: presenceData.map(function (dataItem) {\n        return dataItem.periodicity;\n      }),\n      datasets: [presenceData.map(function (dataItem) {\n        return dataItem.duration / 3600;\n      })],\n      width: viewContainerWidth\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  filterContainer: {\n    alignItems: \"center\",\n    justifyContent: \"start\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginBottom: 24,\n    flexWrap: 'wrap'\n  },\n  container: {\n    width: \"100%\"\n  }\n});\nexport default Dashboard;","map":{"version":3,"names":["React","ApplicationLineChart","useSelector","getUserPresences","Button","Dashboard","currentUser","state","value","viewContainerRef","useRef","useState","presenceData","setPresenceData","viewContainerWidth","setViewContainerWidth","selectedPeriodicity","setSelectedPeriodicity","useEffect","token","user","id","then","data","current","getBoundingClientRect","width","styles","container","filterContainer","marginRight","marginBottom","map","dataItem","periodicity","duration","StyleSheet","create","alignItems","justifyContent","display","flexDirection","flexWrap"],"sources":["/Users/antoine/Documents/EPITECH/time-manager-/mobile/components/Dashboard/index.js"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport ApplicationLineChart from '../LineChart/index';\nimport { useSelector } from 'react-redux';\nimport { getUserPresences } from '../../http/api';\nimport { Button } from 'react-native-paper';\n\nconst Dashboard = () => {\n\n    const currentUser = useSelector((state) => state.currentUser.value);\n    const viewContainerRef = React.useRef(null);\n    const [presenceData, setPresenceData] = React.useState(null)\n    const [viewContainerWidth, setViewContainerWidth] = React.useState(0)\n    const [selectedPeriodicity, setSelectedPeriodicity] = React.useState(\"day\")\n\n    React.useEffect(() => {\n        if (currentUser && selectedPeriodicity) {\n            getUserPresences(currentUser.token, currentUser.user.id, selectedPeriodicity)\n                .then((data) => setPresenceData(data.data))\n        }\n    }, [currentUser, selectedPeriodicity])\n\n    React.useEffect(() => {\n        if (viewContainerRef) {\n            const { width } = viewContainerRef.current.getBoundingClientRect()\n            setViewContainerWidth(width)\n        }\n    }, [viewContainerRef])\n\n    return (\n        <View ref={viewContainerRef} style={styles.container}>\n\n            <View style={styles.filterContainer}>\n                <Button color={\"primary\"} style={{ marginRight: 8, marginBottom: 8 }} mode={selectedPeriodicity === \"day\" ? \"contained\" : \"outlined\"} onPress={() => setSelectedPeriodicity(\"day\")}>\n                    day\n                </Button>\n                <Button style={{ marginRight: 8, marginBottom: 8 }} mode={selectedPeriodicity === \"week\" ? \"contained\" : \"outlined\"} onPress={() => setSelectedPeriodicity(\"week\")}>\n                    week\n                </Button>\n                <Button style={{ marginRight: 8, marginBottom: 8 }} mode={selectedPeriodicity === \"month\" ? \"contained\" : \"outlined\"} onPress={() => setSelectedPeriodicity(\"month\")}>\n                    month\n                </Button>\n                <Button style={{ marginRight: 8, marginBottom: 8 }} mode={selectedPeriodicity === \"year\" ? \"contained\" : \"outlined\"} onPress={() => setSelectedPeriodicity(\"year\")}>\n                    year\n                </Button>\n            </View>\n            {viewContainerWidth && presenceData && <ApplicationLineChart\n                legend={['Presence time']}\n                labels={presenceData.map((dataItem) => dataItem.periodicity)}\n                datasets={[presenceData.map((dataItem) => dataItem.duration / 3600)]}\n                width={viewContainerWidth}\n            />}\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    filterContainer: {\n        alignItems: \"center\",\n        justifyContent: \"start\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginBottom: 24,\n        flexWrap: 'wrap',\n    },\n    container: {\n        width: \"100%\"\n    }\n})\n\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}