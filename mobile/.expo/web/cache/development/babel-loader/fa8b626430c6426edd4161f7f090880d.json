{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { getUserClocks } from \"../../http/api\";\nimport ClockInOutListItem from \"../ClockInOutListItem\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'react-native-paper';\nimport { ApplicationDate } from \"../../date/index\";\nimport { setCurrentUserClocks } from \"../../stores/reducers/currentUserClocksReducer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar History = function History() {\n  var dispatch = useDispatch();\n  var currentUserClocks = useSelector(function (state) {\n    return state.currentUserClocks.value;\n  });\n  var currentUser = useSelector(function (state) {\n    return state.currentUser.value;\n  });\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    displayedClocks = _React$useState2[0],\n    setDisplayedClocks = _React$useState2[1];\n  var _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    selectedFilter = _React$useState4[0],\n    setSelectedFilter = _React$useState4[1];\n  React.useEffect(function () {\n    var _displayedClocks = currentUserClocks.filter(function (clock) {\n      return clock.status === selectedFilter;\n    });\n    setDisplayedClocks(_displayedClocks);\n  }, [currentUserClocks, selectedFilter]);\n  React.useEffect(function () {\n    if (currentUser) {\n      getUserClocks(currentUser.token, currentUser.user.id).then(function (userClocks) {\n        return dispatch(setCurrentUserClocks(userClocks.data));\n      });\n    }\n  }, [currentUser]);\n  var renderClock = function renderClock(_ref) {\n    var clock = _ref.item;\n    return _jsx(ClockInOutListItem, {\n      title: ApplicationDate.format(clock.time),\n      description: \"\"\n    }, clock.id);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.filterContainer,\n      children: [_jsx(Button, {\n        textColor: selectedFilter === true ? \"#FFF\" : \"#001f54\",\n        style: {\n          width: \"50%\",\n          borderRadius: 0,\n          backgroundColor: selectedFilter ? \"#001f54\" : \"#FFF\"\n        },\n        mode: selectedFilter ? \"contained\" : \"text\",\n        onPress: function onPress() {\n          return setSelectedFilter(true);\n        },\n        children: \"Arrival\"\n      }), _jsx(Button, {\n        textColor: selectedFilter === false ? \"#FFF\" : \"#001f54\",\n        style: {\n          width: \"50%\",\n          borderRadius: 0,\n          backgroundColor: !selectedFilter ? \"#001f54\" : \"#FFF\"\n        },\n        mode: selectedFilter ? \"text\" : \"contained\",\n        onPress: function onPress() {\n          return setSelectedFilter(false);\n        },\n        children: \"Deprature\"\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.clocksListContainer,\n      children: _jsx(FlatList, {\n        data: displayedClocks,\n        renderItem: renderClock,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  clocksListContainer: {\n    height: \"100%\"\n  },\n  filterContainer: {\n    alignItems: \"center\",\n    justifyContent: \"start\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginBottom: 16\n  }\n});\nexport default History;","map":{"version":3,"names":["React","getUserClocks","ClockInOutListItem","useSelector","useDispatch","Button","ApplicationDate","setCurrentUserClocks","History","dispatch","currentUserClocks","state","value","currentUser","useState","displayedClocks","setDisplayedClocks","selectedFilter","setSelectedFilter","useEffect","_displayedClocks","filter","clock","status","token","user","id","then","userClocks","data","renderClock","item","format","time","styles","filterContainer","width","borderRadius","backgroundColor","clocksListContainer","StyleSheet","create","height","alignItems","justifyContent","display","flexDirection","marginBottom"],"sources":["C:/Users/lahce/Desktop/epitech2023/pool/time-manager-/mobile/components/History/index.js"],"sourcesContent":["import * as React from 'react';\r\nimport { View, StyleSheet, FlatList, ScrollView } from 'react-native';\r\nimport { getUserClocks } from '../../http/api';\r\nimport ClockInOutListItem from '../ClockInOutListItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from 'react-native-paper';\r\nimport { ApplicationDate } from '../../date/index';\r\nimport { setCurrentUserClocks } from '../../stores/reducers/currentUserClocksReducer';\r\n\r\nconst History = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const currentUserClocks = useSelector((state) => state.currentUserClocks.value)\r\n    const currentUser = useSelector((state) => state.currentUser.value)\r\n    const [displayedClocks, setDisplayedClocks] = React.useState([])\r\n    const [selectedFilter, setSelectedFilter] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        const _displayedClocks = currentUserClocks.filter((clock) => clock.status === selectedFilter)\r\n        setDisplayedClocks(_displayedClocks)\r\n    }, [currentUserClocks, selectedFilter])\r\n\r\n    React.useEffect(() => {\r\n        if (currentUser) {\r\n            getUserClocks(currentUser.token, currentUser.user.id)\r\n                .then((userClocks) =>\r\n                    dispatch(\r\n                        setCurrentUserClocks(userClocks.data)\r\n                    ))\r\n        }\r\n    }, [currentUser])\r\n\r\n    const renderClock = ({ item: clock }) => {\r\n        return <ClockInOutListItem key={clock.id} title={ApplicationDate.format(clock.time)} description={\"\"} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <View style={styles.filterContainer}>\r\n                <Button textColor={selectedFilter === true ? \"#FFF\" : \"#001f54\"} style={{ width:\"50%\", borderRadius:0 , backgroundColor:(selectedFilter ? \"#001f54\" :\"#FFF\") }} mode={selectedFilter ? \"contained\" : \"text\"} onPress={() => setSelectedFilter(true)}>\r\n                    Arrival\r\n                </Button> \r\n                <Button textColor={selectedFilter === false ? \"#FFF\" : \"#001f54\"} style={{ width:\"50%\", borderRadius:0 , backgroundColor:(!selectedFilter ? \"#001f54\" :\"#FFF\") }} mode={selectedFilter ? \"text\" : \"contained\"} onPress={() => setSelectedFilter(false)}>\r\n                    Deprature\r\n                </Button>\r\n            </View>\r\n            <ScrollView style={styles.clocksListContainer}>\r\n                <FlatList\r\n                    data={displayedClocks}\r\n                    renderItem={renderClock}\r\n                    keyExtractor={item => item.id}\r\n                />\r\n            </ScrollView>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    clocksListContainer: {\r\n        height: \"100%\"\r\n    },\r\n    filterContainer: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"start\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginBottom: 16,\r\n    }\r\n})\r\n\r\nexport default History"],"mappings":"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"},"metadata":{},"sourceType":"module"}