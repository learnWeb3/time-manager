{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport moment from \"moment\";\nexport var ApplicationDate = function () {\n  function ApplicationDate() {\n    _classCallCheck(this, ApplicationDate);\n  }\n  _createClass(ApplicationDate, null, [{\n    key: \"format\",\n    value: function format(timeinseconds) {\n      return moment(new Date(timeinseconds * 1000)).format('MMMM Do YYYY, h:mm:ss');\n    }\n  }, {\n    key: \"addTrailingZero\",\n    value: function addTrailingZero(value) {\n      if (value < 10) {\n        return \"0\" + value;\n      }\n    }\n  }]);\n  return ApplicationDate;\n}();\nApplicationDate.calculateElapsedTimeSince = function (timeinseconds) {\n  var elapsedTimeSeconds = Math.round(Date.now() / 1000) - timeinseconds;\n  var hours = Math.floor(elapsedTimeSeconds / 3600);\n  var minutes = Math.floor((elapsedTimeSeconds - hours * 3600) / 60);\n  var seconds = Math.floor(elapsedTimeSeconds - (hours * 3600 + minutes * 60));\n  return {\n    hours: ApplicationDate.addTrailingZero(hours),\n    minutes: ApplicationDate.addTrailingZero(minutes),\n    seconds: ApplicationDate.addTrailingZero(seconds)\n  };\n};","map":{"version":3,"names":["moment","ApplicationDate","timeinseconds","Date","format","value","calculateElapsedTimeSince","elapsedTimeSeconds","Math","round","now","hours","floor","minutes","seconds","addTrailingZero"],"sources":["/Users/antoine/Documents/EPITECH/time-manager-/mobile/date/index.js"],"sourcesContent":["import moment from \"moment\";\n\n\nexport class ApplicationDate {\n\n    static format(timeinseconds) {\n        return moment(new Date(timeinseconds * 1000))\n            .format('MMMM Do YYYY, h:mm:ss');\n    }\n\n    static addTrailingZero(value) {\n        if (value < 10) {\n            return `0${value}`\n        }\n    }\n\n    static calculateElapsedTimeSince = (timeinseconds) => {\n        const elapsedTimeSeconds = Math.round(Date.now() / 1000) - timeinseconds\n        const hours = Math.floor(elapsedTimeSeconds / 3600)\n        const minutes = Math.floor((elapsedTimeSeconds - (hours * 3600)) / 60)\n        const seconds = Math.floor(elapsedTimeSeconds - ((hours * 3600) + (minutes * 60)))\n        return {\n            hours: ApplicationDate.addTrailingZero(hours),\n            minutes: ApplicationDate.addTrailingZero(minutes),\n            seconds: ApplicationDate.addTrailingZero(seconds)\n        }\n    }\n\n}"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,QAAQ;AAG3B,WAAaC,eAAe;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAExB,gBAAcC,aAAa,EAAE;MACzB,OAAOF,MAAM,CAAC,IAAIG,IAAI,CAACD,aAAa,GAAG,IAAI,CAAC,CAAC,CACxCE,MAAM,CAAC,uBAAuB,CAAC;IACxC;EAAC;IAAA;IAAA,OAED,yBAAuBC,KAAK,EAAE;MAC1B,IAAIA,KAAK,GAAG,EAAE,EAAE;QACZ,aAAWA,KAAK;MACpB;IACJ;EAAC;EAAA;AAAA;AAXQJ,eAAe,CAajBK,yBAAyB,GAAG,UAACJ,aAAa,EAAK;EAClD,IAAMK,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,CAACO,GAAG,EAAE,GAAG,IAAI,CAAC,GAAGR,aAAa;EACxE,IAAMS,KAAK,GAAGH,IAAI,CAACI,KAAK,CAACL,kBAAkB,GAAG,IAAI,CAAC;EACnD,IAAMM,OAAO,GAAGL,IAAI,CAACI,KAAK,CAAC,CAACL,kBAAkB,GAAII,KAAK,GAAG,IAAK,IAAI,EAAE,CAAC;EACtE,IAAMG,OAAO,GAAGN,IAAI,CAACI,KAAK,CAACL,kBAAkB,IAAKI,KAAK,GAAG,IAAI,GAAKE,OAAO,GAAG,EAAG,CAAC,CAAC;EAClF,OAAO;IACHF,KAAK,EAAEV,eAAe,CAACc,eAAe,CAACJ,KAAK,CAAC;IAC7CE,OAAO,EAAEZ,eAAe,CAACc,eAAe,CAACF,OAAO,CAAC;IACjDC,OAAO,EAAEb,eAAe,CAACc,eAAe,CAACD,OAAO;EACpD,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}