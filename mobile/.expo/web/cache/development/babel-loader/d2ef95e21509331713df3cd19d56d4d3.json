{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Text } from 'react-native-paper';\nimport { useDispatch } from 'react-redux';\nimport { validateEmail, validatePassword } from \"../../validators/index\";\nimport InputGroup from \"../InputGroup/index\";\nimport { setCurrentUser } from \"../../stores/reducers/currentUserReducer\";\nimport { login } from \"../../http/api\";\nimport { LocalStorage } from \"../../localstorage/index\";\nimport { env } from \"../../env/index\";\nimport { useAlert } from \"../../hooks/alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar LoginForm = function LoginForm() {\n  var _useAlert = useAlert(),\n    alert = _useAlert.alert,\n    setAlert = _useAlert.setAlert,\n    Snackbar = _useAlert.component;\n  var dispatch = useDispatch();\n  var _React$useState = React.useState({\n      email: {\n        isError: false,\n        value: \"\",\n        errors: []\n      },\n      password: {\n        isError: false,\n        value: \"\",\n        errors: []\n      }\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formData = _React$useState2[0],\n    setFormData = _React$useState2[1];\n  React.useEffect(function () {\n    handleValidateFormData(formData);\n  }, [formData.email.value, formData.password.value]);\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var message = \"\";\n      var severity = \"error\";\n      var data = {\n        email: formData.email.value,\n        password: formData.password.value\n      };\n      try {\n        var currentUser = yield login(data);\n        if (currentUser) {\n          yield LocalStorage.storeData(env.LOCAL_STORAGE_CURRENT_USER_KEY, currentUser);\n          dispatch(setCurrentUser(currentUser));\n          message = \"Loged in with success\";\n          severity = \"success\";\n        } else {\n          throw new Error('missing token field in response call');\n        }\n      } catch (error) {\n        message = \"An unexpected error has been encountered, please try again later or contact tour administrator\";\n      } finally {\n        setAlert({\n          toggled: true,\n          message: message,\n          severity: severity\n        });\n      }\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleValidateFormData = function handleValidateFormData(formData) {\n    var _validateEmail = validateEmail(\"email\", formData.email.value),\n      emailIsValid = _validateEmail.isValid,\n      emailValidationsErrors = _validateEmail.errors;\n    var _validatePassword = validatePassword(\"password\", formData.password.value),\n      passwordIsValid = _validatePassword.isValid,\n      passwordValidationsErrors = _validatePassword.errors;\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      email: _objectSpread(_objectSpread({}, formData.email), {}, {\n        isError: !emailIsValid,\n        errors: emailValidationsErrors\n      }),\n      password: _objectSpread(_objectSpread({}, formData.password), {}, {\n        isError: !passwordIsValid,\n        errors: passwordValidationsErrors\n      })\n    }));\n  };\n  var handleEmail = function handleEmail(email) {\n    var updatedFormData = _objectSpread(_objectSpread({}, formData), {}, {\n      email: _objectSpread(_objectSpread({}, formData.email), {}, {\n        value: email\n      })\n    });\n    setFormData(updatedFormData);\n  };\n  var handlePassword = function handlePassword(password) {\n    var updatedFormData = _objectSpread(_objectSpread({}, formData), {}, {\n      password: _objectSpread(_objectSpread({}, formData.password), {}, {\n        value: password\n      })\n    });\n    setFormData(updatedFormData);\n  };\n  var handleCloseAlert = function handleCloseAlert() {\n    setAlert({\n      toggled: false,\n      message: \"\",\n      severity: \"error\"\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.header,\n        variant: \"headlineMedium\",\n        children: \"Sign in\"\n      }), _jsx(InputGroup, {\n        isError: formData.email.isError,\n        errors: formData.email.errors,\n        value: formData.email.value,\n        handleInput: function handleInput(email) {\n          return handleEmail(email);\n        }\n      }), _jsx(InputGroup, {\n        isError: formData.password.isError,\n        errors: formData.password.errors,\n        value: formData.password.value,\n        handleInput: function handleInput(password) {\n          return handlePassword(password);\n        },\n        secureTextEntry: true\n      }), _jsx(Button, {\n        disabled: formData.email.isError || formData.password.isError,\n        mode: \"contained\",\n        onPress: handleSubmit,\n        children: \"ok\"\n      })]\n    }), _jsx(Snackbar, {\n      onClose: handleCloseAlert,\n      toggled: alert.toggled,\n      message: alert.message,\n      severity: alert.severity\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  header: {\n    marginBottom: 24\n  },\n  container: {\n    width: \"100%\",\n    padding: 24\n  }\n});\nexport default LoginForm;","map":{"version":3,"names":["React","Button","Text","useDispatch","validateEmail","validatePassword","InputGroup","setCurrentUser","login","LocalStorage","env","useAlert","LoginForm","alert","setAlert","Snackbar","component","dispatch","useState","email","isError","value","errors","password","formData","setFormData","useEffect","handleValidateFormData","handleSubmit","message","severity","data","currentUser","storeData","LOCAL_STORAGE_CURRENT_USER_KEY","Error","error","toggled","emailIsValid","isValid","emailValidationsErrors","passwordIsValid","passwordValidationsErrors","handleEmail","updatedFormData","handlePassword","handleCloseAlert","styles","container","header","StyleSheet","create","marginBottom","width","padding"],"sources":["/Users/antoine/Documents/EPITECH/time-manager-/mobile/components/LoginForm/index.js"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Button, Text } from 'react-native-paper';\nimport { useDispatch } from 'react-redux';\nimport { validateEmail, validatePassword } from '../../validators/index';\nimport InputGroup from '../InputGroup/index';\nimport { setCurrentUser } from '../../stores/reducers/currentUserReducer';\nimport { login } from '../../http/api';\nimport { LocalStorage } from '../../localstorage/index';\nimport { env } from '../../env/index';\nimport { useAlert } from '../../hooks/alert';\n\nconst LoginForm = () => {\n\n    const { alert, setAlert, component: Snackbar } = useAlert()\n    const dispatch = useDispatch()\n\n    const [formData, setFormData] = React.useState({\n        email: {\n            isError: false,\n            value: \"\",\n            errors: []\n        },\n        password: {\n            isError: false,\n            value: \"\",\n            errors: []\n        }\n    })\n\n    React.useEffect(() => {\n        handleValidateFormData(formData)\n    }, [formData.email.value, formData.password.value])\n\n    const handleSubmit = async () => {\n\n        let message = \"\";\n        let severity = \"error\"\n        const data = {\n            email: formData.email.value,\n            password: formData.password.value\n        }\n\n        try {\n            const currentUser = await login(data)\n            if (currentUser) {\n                await LocalStorage.storeData(\n                    env.LOCAL_STORAGE_CURRENT_USER_KEY,\n                    currentUser\n                )\n                dispatch(setCurrentUser(currentUser))\n                message = \"Loged in with success\";\n                severity = \"success\";\n            } else {\n                throw new Error('missing token field in response call')\n            }\n        } catch (error) {\n            message = \"An unexpected error has been encountered, please try again later or contact tour administrator\"\n        } finally {\n            setAlert({\n                toggled: true,\n                message,\n                severity\n            })\n        }\n    }\n\n    const handleValidateFormData = (formData) => {\n        const {\n            isValid: emailIsValid,\n            errors: emailValidationsErrors\n        } = validateEmail(\"email\", formData.email.value)\n        const {\n            isValid: passwordIsValid,\n            errors: passwordValidationsErrors\n        } = validatePassword(\"password\", formData.password.value)\n\n        setFormData({\n            ...formData,\n            email: {\n                ...formData.email,\n                isError: !emailIsValid,\n                errors: emailValidationsErrors\n            },\n            password: {\n                ...formData.password,\n                isError: !passwordIsValid,\n                errors: passwordValidationsErrors\n            }\n        })\n    }\n\n    const handleEmail = (email) => {\n        const updatedFormData = {\n            ...formData,\n            email: {\n                ...formData.email,\n                value: email\n            }\n        }\n        setFormData(updatedFormData)\n    }\n\n\n    const handlePassword = (password) => {\n        const updatedFormData = {\n            ...formData,\n            password: {\n                ...formData.password,\n                value: password\n            }\n        }\n        setFormData(updatedFormData)\n    }\n\n    const handleCloseAlert = () => {\n        setAlert({\n            toggled: false,\n            message: \"\",\n            severity: \"error\"\n        })\n    }\n\n    return (\n        <>\n            <View style={styles.container}>\n                <Text style={styles.header} variant=\"headlineMedium\">Sign in</Text>\n\n                <InputGroup\n                    isError={formData.email.isError}\n                    errors={formData.email.errors}\n                    value={formData.email.value}\n                    handleInput={email => handleEmail(email)}\n                />\n\n\n                <InputGroup\n                    isError={formData.password.isError}\n                    errors={formData.password.errors}\n                    value={formData.password.value}\n                    handleInput={password => handlePassword(password)}\n                    secureTextEntry={true}\n                />\n\n                <Button disabled={formData.email.isError || formData.password.isError} mode=\"contained\" onPress={handleSubmit}>\n                    ok\n                </Button>\n\n            </View>\n\n            <Snackbar onClose={handleCloseAlert} toggled={alert.toggled} message={alert.message} severity={alert.severity} />\n\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    header: {\n        marginBottom: 24\n    },\n    container: {\n        width: \"100%\",\n        padding:24\n    },\n});\n\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}