{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button, Text } from 'react-native-paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createClock, getUserStatus } from \"../../http/api\";\nimport { useAlert } from \"../../hooks/alert\";\nimport { ApplicationDate } from \"../../date/index\";\nimport { addNewCurrentUserClock } from \"../../stores/reducers/currentUserClocksReducer\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CLockInOutForm = function CLockInOutForm() {\n  var dispatch = useDispatch();\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    timeIntervalRef = _React$useState2[0],\n    setTimeIntervalRef = _React$useState2[1];\n  var _useAlert = useAlert(),\n    alert = _useAlert.alert,\n    setAlert = _useAlert.setAlert,\n    Snackbar = _useAlert.component;\n  var currentUser = useSelector(function (state) {\n    return state.currentUser.value;\n  });\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    status = _React$useState4[0],\n    setStatus = _React$useState4[1];\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    elapsedTimeSinceArrival = _React$useState6[0],\n    setElapsedTimeSinceArrival = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    isLandscape = _React$useState8[0],\n    setIsLandscape = _React$useState8[1];\n  React.useEffect(function () {\n    if (currentUser) {\n      getUserStatus(currentUser.token, currentUser.user.id).then(function (status) {\n        return setStatus(status.data ? status.data : \"no data\");\n      });\n    }\n  }, [currentUser]);\n  React.useEffect(function () {\n    console.log(\"tesdt\");\n    var dim = Dimensions.get('screen');\n    if (dim.width >= dim.height) {\n      setIsLandscape(true);\n    } else {\n      setIsLandscape(false);\n    }\n  });\n  React.useEffect(function () {\n    if (status && status.time && status.status && !timeIntervalRef) {\n      setTimeIntervalRef(setInterval(function () {\n        setElapsedTimeSinceArrival(ApplicationDate.calculateElapsedTimeSince(status.time));\n      }, 1000));\n    }\n    if (status && !status.status && timeIntervalRef) {\n      clearInterval(timeIntervalRef);\n      setTimeIntervalRef(null);\n      setElapsedTimeSinceArrival(null);\n    }\n  }, [status, timeIntervalRef]);\n  React.useEffect(function () {\n    return function () {\n      if (timeIntervalRef) {\n        clearInterval(timeIntervalRef);\n        setTimeIntervalRef(null);\n        setElapsedTimeSinceArrival(null);\n      }\n    };\n  }, []);\n  var handleCloseAlert = function handleCloseAlert() {\n    setAlert({\n      toggled: false,\n      message: \"\",\n      severity: \"error\"\n    });\n  };\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var message = \"\";\n      var severity = \"error\";\n      try {\n        var _yield$createClock = yield createClock(currentUser.token, currentUser.user.id, {\n            clock: {\n              time: Math.floor(Date.now() / 1000)\n            }\n          }),\n          data = _yield$createClock.data;\n        dispatch(addNewCurrentUserClock(data));\n        setStatus(data);\n        message = data.status ? \"Arrival registered with success\" : \"Departure registered with success\";\n        severity = \"success\";\n      } catch (error) {\n        message = \"An unexpected error has been encountered, please try again later or contact tour administrator\";\n      } finally {\n        setAlert({\n          toggled: true,\n          message: message,\n          severity: severity\n        });\n      }\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.scrollView,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: {\n          flex: 2,\n          background: \"#342533\"\n        },\n        children: _jsxs(Text, {\n          variant: \"bodyMedium\",\n          style: {\n            flex: 2,\n            fontSize: 30\n          },\n          children: [\" \", !elapsedTimeSinceArrival ? \"Clock in\" : \" Clock Out\"]\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 2,\n          background: \"black\"\n        },\n        children: _jsx(Button, {\n          onPress: handleSubmit,\n          children: !isLandscape ? _jsx(Image, {\n            style: {\n              height: 200,\n              width: 200,\n              resizeMode: 'stretch',\n              shadowColor: '#171717',\n              shadowOffset: {\n                width: -2,\n                height: 4\n              },\n              shadowOpacity: 0.2,\n              shadowRadius: 3\n            },\n            source: require(\"../../assets/addClockin.png\")\n          }) : _jsx(Image, {\n            style: {\n              height: 80,\n              width: 80,\n              resizeMode: 'stretch',\n              shadowColor: '#171717',\n              shadowOffset: {\n                width: -2,\n                height: 4\n              },\n              shadowOpacity: 0.2,\n              shadowRadius: 3\n            },\n            source: require(\"../../assets/addClockin.png\")\n          })\n        })\n      }), _jsx(Text, {\n        variant: \"titleSmall\",\n        style: {\n          color: \"black\",\n          flex: 2,\n          background: \"blue\"\n        },\n        children: elapsedTimeSinceArrival ? elapsedTimeSinceArrival.hours + \":\" + elapsedTimeSinceArrival.minutes + \":\" + elapsedTimeSinceArrival.seconds : \"Just arrived !\"\n      }), _jsx(Snackbar, {\n        onClose: handleCloseAlert,\n        toggled: alert.toggled,\n        message: alert.message,\n        severity: alert.severity\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  scrollView: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  clockInOutButton: {\n    height: 180,\n    width: 180,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 10\n  },\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1\n  },\n  elapsedTimeContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 24\n  }\n});\nexport default CLockInOutForm;","map":{"version":3,"names":["React","Button","Text","useSelector","useDispatch","createClock","getUserStatus","useAlert","ApplicationDate","addNewCurrentUserClock","CLockInOutForm","dispatch","useState","timeIntervalRef","setTimeIntervalRef","alert","setAlert","Snackbar","component","currentUser","state","value","status","setStatus","elapsedTimeSinceArrival","setElapsedTimeSinceArrival","isLandscape","setIsLandscape","useEffect","token","user","id","then","data","console","log","dim","Dimensions","get","width","height","time","setInterval","calculateElapsedTimeSince","clearInterval","handleCloseAlert","toggled","message","severity","handleSubmit","clock","Math","floor","Date","now","error","styles","scrollView","container","flex","background","fontSize","resizeMode","shadowColor","shadowOffset","shadowOpacity","shadowRadius","require","color","hours","minutes","seconds","StyleSheet","create","display","alignItems","justifyContent","clockInOutButton","borderRadius","position","elapsedTimeContainer","marginBottom"],"sources":["C:/Users/lahce/Desktop/epitech2023/pool/time-manager-/mobile/components/ClockInOutForm/index.js"],"sourcesContent":["import * as React from 'react';\r\nimport { ScrollView, StyleSheet, View, Image, Dimensions } from 'react-native';\r\nimport { Button, Text } from 'react-native-paper';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createClock, getUserStatus } from '../../http/api';\r\nimport { useAlert } from '../../hooks/alert';\r\nimport { ApplicationDate } from '../../date/index';\r\nimport { addNewCurrentUserClock } from '../../stores/reducers/currentUserClocksReducer';\r\n\r\nconst CLockInOutForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [timeIntervalRef, setTimeIntervalRef] = React.useState(null)\r\n    const { alert, setAlert, component: Snackbar } = useAlert()\r\n    const currentUser = useSelector((state) => state.currentUser.value)\r\n    const [status, setStatus] = React.useState(null)\r\n    const [elapsedTimeSinceArrival, setElapsedTimeSinceArrival] = React.useState(null);\r\n    const [isLandscape, setIsLandscape] = React.useState(false);\r\n    \r\n\r\n    React.useEffect(() => {\r\n        if (currentUser) {\r\n            getUserStatus(currentUser.token, currentUser.user.id).then((status) => setStatus(status.data ? status.data : \"no data\"))\r\n        }\r\n    }, [currentUser])\r\n\r\n    React.useEffect(()=>{\r\n        console.log(\"tesdt\")\r\n        const dim = Dimensions.get('screen');\r\n        if (dim.width >= dim.height){\r\n            setIsLandscape(true);\r\n        }else{\r\n            setIsLandscape(false);\r\n        }\r\n    })\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (status && status.time && status.status && !timeIntervalRef) {\r\n            setTimeIntervalRef(\r\n                setInterval(() => {\r\n                    setElapsedTimeSinceArrival(ApplicationDate.calculateElapsedTimeSince(status.time))\r\n                }, 1000)\r\n            )\r\n        }\r\n        if (status && !status.status && timeIntervalRef) {\r\n            clearInterval(timeIntervalRef)\r\n            setTimeIntervalRef(null)\r\n            setElapsedTimeSinceArrival(null)\r\n        }\r\n    }, [status, timeIntervalRef])\r\n\r\n\r\n    React.useEffect(() => () => {\r\n        if (timeIntervalRef) {\r\n            clearInterval(timeIntervalRef)\r\n            setTimeIntervalRef(null)\r\n            setElapsedTimeSinceArrival(null)\r\n        }\r\n    }, []);\r\n\r\n\r\n    const handleCloseAlert = () => {\r\n        setAlert({\r\n            toggled: false,\r\n            message: \"\",\r\n            severity: \"error\"\r\n        })\r\n    }\r\n \r\n    const handleSubmit = async () => {\r\n        let message = \"\";\r\n        let severity = \"error\"\r\n        try {\r\n            const { data } = await createClock(currentUser.token, currentUser.user.id, {\r\n                clock: {\r\n                    time: Math.floor(\r\n                        Date.now() / 1000\r\n                    )\r\n                }\r\n            })\r\n            dispatch(addNewCurrentUserClock(data))\r\n            setStatus(data)\r\n            message = data.status ? \"Arrival registered with success\" : \"Departure registered with success\";\r\n            severity = \"success\";\r\n        } catch (error) {\r\n            message = \"An unexpected error has been encountered, please try again later or contact tour administrator\"\r\n        } finally {\r\n            setAlert({\r\n                toggled: true,\r\n                message,\r\n                severity\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <ScrollView contentContainerStyle={styles.scrollView}>\r\n            <View style={styles.container}>\r\n                <View style={{flex:2,background:\"#342533\"}}>\r\n                    <Text variant=\"bodyMedium\" style={{ flex:2, fontSize:30 }}> {!elapsedTimeSinceArrival ?  \"Clock in\" : \" Clock Out\" }</Text>\r\n                </View>\r\n                <View style={{flex:2,background:\"black\"}}>\r\n                    <Button onPress={handleSubmit}>\r\n                        {!isLandscape ?<Image style={{height:200 ,width:200, resizeMode: 'stretch', shadowColor: '#171717',shadowOffset: {width: -2, height: 4},shadowOpacity: 0.2,shadowRadius: 3 }} source={require('../../assets/addClockin.png')} ></Image> \r\n                        :<Image style={{height: 80 ,width:80, resizeMode: 'stretch', shadowColor: '#171717',shadowOffset: {width: -2, height: 4},shadowOpacity: 0.2,shadowRadius: 3 }} source={require('../../assets/addClockin.png')} ></Image>  }\r\n                    </Button> \r\n                </View>\r\n                <Text variant=\"titleSmall\" style={{ color: \"black\", flex:2, background:\"blue\"}}>\r\n                        {elapsedTimeSinceArrival ? `${elapsedTimeSinceArrival.hours}:${elapsedTimeSinceArrival.minutes}:${elapsedTimeSinceArrival.seconds}` : \"Just arrived !\"}\r\n                </Text>\r\n\r\n\r\n                <Snackbar onClose={handleCloseAlert} toggled={alert.toggled} message={alert.message} severity={alert.severity} />\r\n            </View>\r\n        </ScrollView>\r\n\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollView: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    clockInOutButton: {\r\n        height: 180,\r\n        width: 180,\r\n        borderRadius: \"50%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 10 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 10,\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"relative\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n    },\r\n    elapsedTimeContainer: {\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: 24\r\n    }\r\n});\r\n\r\nexport default CLockInOutForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}