{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ApplicationLineChart from \"../LineChart/index\";\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard() {\n  var currentUser = useSelector(function (state) {\n    return state.currentUser.status;\n  });\n  var viewContainerRef = React.useRef(null);\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    presenceData = _React$useState2[0],\n    setPresenceData = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    viewContainerWidth = _React$useState4[0],\n    setViewContainerWidth = _React$useState4[1];\n  React.useEffect(function () {}, []);\n  React.useEffect(function () {\n    if (viewContainerRef) {\n      var _viewContainerRef$cur = viewContainerRef.current.getBoundingClientRect(),\n        width = _viewContainerRef$cur.width;\n      setViewContainerWidth(width);\n    }\n  }, [viewContainerRef]);\n  return _jsx(View, {\n    ref: viewContainerRef,\n    style: styles.container,\n    children: viewContainerWidth && _jsx(ApplicationLineChart, {\n      width: viewContainerWidth\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\"\n  }\n});\nexport default Dashboard;","map":{"version":3,"names":["React","ApplicationLineChart","useSelector","Dashboard","currentUser","state","status","viewContainerRef","useRef","useState","presenceData","setPresenceData","viewContainerWidth","setViewContainerWidth","useEffect","current","getBoundingClientRect","width","styles","container","StyleSheet","create"],"sources":["/Users/antoine/Documents/EPITECH/time-manager-/mobile/components/Dashboard/index.js"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport ApplicationLineChart from '../LineChart/index';\nimport { useSelector } from 'react-redux';\n\nconst Dashboard = () => {\n\n    const currentUser = useSelector((state) => state.currentUser.status);\n    const viewContainerRef = React.useRef(null);\n    const [presenceData, setPresenceData] = React.useState(null)\n    const [viewContainerWidth, setViewContainerWidth] = React.useState(0)\n\n    React.useEffect(() => {\n\n    }, [])\n\n    React.useEffect(() => {\n        if (viewContainerRef) {\n            const { width } = viewContainerRef.current.getBoundingClientRect()\n            setViewContainerWidth(width)\n        }\n    }, [viewContainerRef])\n\n    return (\n        <View ref={viewContainerRef} style={styles.container}>\n            {viewContainerWidth && <ApplicationLineChart width={viewContainerWidth} />}\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: \"100%\"\n    }\n})\n\nexport default Dashboard"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE/B,OAAOC,oBAAoB;AAC3B,SAASC,WAAW,QAAQ,aAAa;AAAC;AAE1C,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;EAEpB,IAAMC,WAAW,GAAGF,WAAW,CAAC,UAACG,KAAK;IAAA,OAAKA,KAAK,CAACD,WAAW,CAACE,MAAM;EAAA,EAAC;EACpE,IAAMC,gBAAgB,GAAGP,KAAK,CAACQ,MAAM,CAAC,IAAI,CAAC;EAC3C,sBAAwCR,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArDC,YAAY;IAAEC,eAAe;EACpC,uBAAoDX,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9DG,kBAAkB;IAAEC,qBAAqB;EAEhDb,KAAK,CAACc,SAAS,CAAC,YAAM,CAEtB,CAAC,EAAE,EAAE,CAAC;EAENd,KAAK,CAACc,SAAS,CAAC,YAAM;IAClB,IAAIP,gBAAgB,EAAE;MAClB,4BAAkBA,gBAAgB,CAACQ,OAAO,CAACC,qBAAqB,EAAE;QAA1DC,KAAK,yBAALA,KAAK;MACbJ,qBAAqB,CAACI,KAAK,CAAC;IAChC;EACJ,CAAC,EAAE,CAACV,gBAAgB,CAAC,CAAC;EAEtB,OACI,KAAC,IAAI;IAAC,GAAG,EAAEA,gBAAiB;IAAC,KAAK,EAAEW,MAAM,CAACC,SAAU;IAAA,UAChDP,kBAAkB,IAAI,KAAC,oBAAoB;MAAC,KAAK,EAAEA;IAAmB;EAAG,EACvE;AAEf,CAAC;AAED,IAAMM,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC7BF,SAAS,EAAE;IACPF,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAed,SAAS"},"metadata":{},"sourceType":"module"}