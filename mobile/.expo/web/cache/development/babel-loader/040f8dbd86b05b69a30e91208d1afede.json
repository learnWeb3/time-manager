{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getUserClocks } from \"../../http/api\";\nimport ClockInOutListItem from \"../ClockInOutListItem\";\nimport { useSelector } from 'react-redux';\nimport { Button } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar formatTimeToDate = function formatTimeToDate(time) {\n  var date = new Date(time * 1000);\n  return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" at \" + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n};\nvar Dashboard = function Dashboard() {\n  var currentUser = useSelector(function (state) {\n    return state.currentUser.value;\n  });\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    clocks = _React$useState2[0],\n    setClocks = _React$useState2[1];\n  var _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    selectedFilter = _React$useState4[0],\n    setSelectedFilter = _React$useState4[1];\n  React.useEffect(function () {\n    return console.log(clocks.filter(function (clock) {\n      return clock.status === selectedFilter;\n    }));\n  }, [clocks]);\n  React.useEffect(function () {\n    if (currentUser) {\n      getUserClocks(currentUser.token, currentUser.user.id).then(function (userClocks) {\n        return setClocks(userClocks.data);\n      });\n    }\n  }, [currentUser]);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.filterContainer,\n      children: [_jsx(Button, {\n        style: {\n          marginRight: 8\n        },\n        mode: \"outlined\",\n        onPress: function onPress() {\n          return console.log('Pressed');\n        },\n        children: \"arrival\"\n      }), _jsx(Button, {\n        style: {\n          marginRight: 8\n        },\n        mode: \"outlined\",\n        onPress: function onPress() {\n          return console.log('Pressed');\n        },\n        children: \"departure\"\n      })]\n    }), _jsxs(View, {\n      style: styles.filterContainer,\n      children: [\"HELLO WORLD\", clocks.filter(function (clock) {\n        return clock.status === selectedFilter;\n      }).map(function (clock) {\n        return _jsx(ClockInOutListItem, {\n          title: formatTimeToDate(clock.time),\n          description: \"\"\n        }, clock.id);\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  filterContainer: {\n    alignItems: \"center\",\n    justifyContent: \"start\",\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n});\nexport default Dashboard;","map":{"version":3,"names":["React","getUserClocks","ClockInOutListItem","useSelector","Button","formatTimeToDate","time","date","Date","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","Dashboard","currentUser","state","value","useState","clocks","setClocks","selectedFilter","setSelectedFilter","useEffect","console","log","filter","clock","status","token","user","id","then","userClocks","data","styles","filterContainer","marginRight","map","StyleSheet","create","alignItems","justifyContent","display","flexDirection"],"sources":["/Users/antoine/Documents/EPITECH/time-manager-/mobile/components/Dashboard/index.js"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { getUserClocks } from '../../http/api';\nimport ClockInOutListItem from '../ClockInOutListItem';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'react-native-paper';\n\nconst formatTimeToDate = (time) => {\n    const date = new Date(time * 1000);\n    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()} at ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\n}\n\n\nconst Dashboard = () => {\n\n    const currentUser = useSelector((state) => state.currentUser.value)\n    const [clocks, setClocks] = React.useState([])\n    const [selectedFilter, setSelectedFilter] = React.useState(true)\n\n    React.useEffect(() =>  console.log(clocks.filter((clock) => clock.status === selectedFilter)), [clocks])\n    React.useEffect(() => {\n        if (currentUser) {\n            getUserClocks(currentUser.token, currentUser.user.id).then((userClocks) => setClocks(userClocks.data))\n        }\n    }, [currentUser])\n\n    return (\n        <>\n            <View style={styles.filterContainer}>\n\n                <Button style={{ marginRight: 8 }} mode=\"outlined\" onPress={() => console.log('Pressed')}>\n                    arrival\n                </Button>\n                <Button style={{ marginRight: 8 }} mode=\"outlined\" onPress={() => console.log('Pressed')}>\n                    departure\n                </Button>\n            </View>\n\n            <View style={styles.filterContainer}>\n                HELLO WORLD\n                {\n                    clocks.filter((clock) => clock.status === selectedFilter).map((clock) => <ClockInOutListItem key={clock.id} title={formatTimeToDate(clock.time)} description={\"\"} />)\n                }\n            </View>\n        </>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    filterContainer: {\n        alignItems: \"center\",\n        justifyContent: \"start\",\n        display: \"flex\",\n        flexDirection: \"row\"\n    }\n})\n\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}