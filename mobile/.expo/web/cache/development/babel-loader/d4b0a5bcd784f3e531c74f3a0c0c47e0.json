{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nimport { env } from \"../env/index\";\nimport { setCurrentUser } from \"../stores/reducers/currentUserReducer\";\nimport { LocalStorage } from \"../localstorage/index\";\nvar httpApi = axios.create({\n  baseURL: env.API_BASE_URL,\n  timeout: 1000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nhttpApi.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response.status === 401) {\n    LocalStorage.removeData(env.LOCAL_STORAGE_CURRENT_USER_KEY).then(function () {\n      return setCurrentUser(null);\n    });\n  }\n  return Promise.reject(error);\n});\nvar mergeAuthHeaders = function mergeAuthHeaders(axiosInstance, token) {\n  axiosInstance.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n  return axiosInstance;\n};\nexport var login = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      email: \"\",\n      password: \"\"\n    };\n    return yield httpApi.post('/sessions/login', data).then(function (response) {\n      return response.data;\n    });\n  });\n  return function login() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var updateProfileInformations = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      \"email\": \"testou@yopmail.com\",\n      \"jobtitle\": \"test\",\n      \"role\": 2,\n      \"username\": \"testou\"\n    };\n    return yield httpApi.post('/sessions/login', data).then(function (response) {\n      return response.data;\n    });\n  });\n  return function updateProfileInformations() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getUserStatus = function getUserStatus(token, userId) {\n  return mergeAuthHeaders(httpApi, token).get(\"/status/\" + userId).then(function (response) {\n    return response.data;\n  });\n};\nexport var createClock = function createClock(token, userId) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clock: {\n      time: Math.round(Date.now() / 1000)\n    }\n  };\n  return mergeAuthHeaders(httpApi, token).post(\"/clocks/\" + userId, data).then(function (response) {\n    return response.data;\n  });\n};\nexport var getUserClocks = function getUserClocks(token, userId) {\n  return mergeAuthHeaders(httpApi, token).get(\"/clocks/\" + userId).then(function (response) {\n    return response.data;\n  });\n};\nexport var getUserPresences = function getUserPresences(token, userId) {\n  var periodicity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"day\";\n  return mergeAuthHeaders(httpApi, token).get(\"/clocks/presence?userId=\" + userId + \"&periodicity=\" + periodicity).then(function (response) {\n    return response.data;\n  });\n};","map":{"version":3,"names":["axios","env","setCurrentUser","LocalStorage","httpApi","create","baseURL","API_BASE_URL","timeout","headers","interceptors","response","use","error","status","removeData","LOCAL_STORAGE_CURRENT_USER_KEY","then","Promise","reject","mergeAuthHeaders","axiosInstance","token","defaults","common","login","data","email","password","post","updateProfileInformations","getUserStatus","userId","get","createClock","clock","time","Math","round","Date","now","getUserClocks","getUserPresences","periodicity"],"sources":["/Users/antoine/Documents/EPITECH/time-manager-/mobile/http/api.js"],"sourcesContent":["import axios from \"axios\";\nimport { env } from '../env/index';\nimport { setCurrentUser } from \"../stores/reducers/currentUserReducer\";\nimport { LocalStorage } from '../localstorage/index';\n\nconst httpApi = axios.create({\n    baseURL: env.API_BASE_URL,\n    timeout: 1000,\n    headers: { 'Content-Type': 'application/json' }\n});\n\nhttpApi.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (error.response.status === 401) {\n        LocalStorage.removeData(env.LOCAL_STORAGE_CURRENT_USER_KEY)\n            .then(() => setCurrentUser(null))\n    }\n    return Promise.reject(error);\n});\n\n\nconst mergeAuthHeaders = (axiosInstance, token) => {\n    axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    return axiosInstance\n}\n\nexport const login = async (data = { email: \"\", password: \"\" }) => {\n    return await httpApi.post('/sessions/login', data).then((response) => response.data)\n}\n\nexport const updateProfileInformations = async (data = {\n    \"email\": \"testou@yopmail.com\",\n    \"jobtitle\": \"test\",\n    \"role\": 2,\n    \"username\": \"testou\"\n}) => {\n    return await httpApi.post('/sessions/login', data).then((response) => response.data)\n}\n\nexport const getUserStatus = (token, userId) => mergeAuthHeaders(httpApi, token)\n    .get(`/status/${userId}`,)\n    .then((response) => response.data)\n\nexport const createClock = (token, userId, data = {\n    clock: {\n        time: Math.round(Date.now() / 1000)\n    }\n}) => mergeAuthHeaders(httpApi, token)\n    .post(`/clocks/${userId}`, data)\n    .then((response) => response.data)\n\nexport const getUserClocks = (token, userId) => mergeAuthHeaders(httpApi, token)\n    .get(`/clocks/${userId}`)\n    .then((response) => response.data)\n\nexport const getUserPresences = (token, userId, periodicity = \"day\") => mergeAuthHeaders(httpApi, token)\n    .get(`/clocks/presence?userId=${userId}&periodicity=${periodicity}`)\n    .then((response) => response.data)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}