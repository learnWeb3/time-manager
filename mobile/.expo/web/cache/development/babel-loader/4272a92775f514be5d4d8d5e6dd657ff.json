{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { NavigationContainer } from '@react-navigation/native';\nimport * as React from 'react';\nimport ClockInOutScreen from \"../../screens/ClockInOutScreen\";\nimport { routes } from \"../../routes/index\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport DashboardScreen from \"../../screens/DashboardScreen/index\";\nimport HistoryScreen from \"../../screens/HistoryScreen\";\nimport { Button, Text } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function AuthenticatedScreenRouter() {\n  return _jsxs(_Fragment, {\n    children: [\"color=\", color === \"rgb(0, 122, 255)\" ? \"#001f54\" : color, _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        tabBarOptions: {\n          acticeTintColor: \"#001f54\",\n          ina: ina\n        },\n        children: [_jsx(Tab.Screen, {\n          name: routes.clockinout.name,\n          options: {\n            title: routes.clockinout.title,\n            tabBarIcon: function tabBarIcon(_ref) {\n              var color = _ref.color,\n                size = _ref.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"clock\",\n                size: size\n              });\n            }\n          },\n          children: function children(props) {\n            return _jsx(ClockInOutScreen, _objectSpread({}, props));\n          }\n        }), _jsx(Tab.Screen, {\n          name: routes.history.name,\n          options: {\n            title: routes.history.title,\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var color = _ref2.color,\n                size = _ref2.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"history\",\n                size: size\n              });\n            }\n          },\n          children: function children(props) {\n            return _jsx(HistoryScreen, _objectSpread({}, props));\n          }\n        }), _jsx(Tab.Screen, {\n          name: routes.dashboard.name,\n          options: {\n            title: routes.dashboard.title,\n            tabBarIcon: function tabBarIcon(_ref3) {\n              var color = _ref3.color,\n                size = _ref3.size;\n              return _jsx(MaterialCommunityIcons, {\n                name: \"view-dashboard\",\n                size: size\n              });\n            }\n          },\n          children: function children(props) {\n            return _jsx(DashboardScreen, _objectSpread({}, props));\n          }\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["NavigationContainer","React","ClockInOutScreen","routes","createBottomTabNavigator","MaterialCommunityIcons","DashboardScreen","HistoryScreen","Button","Text","Tab","AuthenticatedScreenRouter","color","acticeTintColor","ina","clockinout","name","title","tabBarIcon","size","props","history","dashboard"],"sources":["C:/Users/lahce/Desktop/epitech2023/pool/time-manager-/mobile/components/AuthenticatedScreenRouter/index.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport * as React from 'react'\r\nimport ClockInOutScreen from '../../screens/ClockInOutScreen';\r\nimport { routes } from '../../routes/index';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport DashboardScreen from '../../screens/DashboardScreen/index';\r\nimport HistoryScreen from '../../screens/HistoryScreen';\r\nimport { Button, Text } from 'react-native-paper';\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function AuthenticatedScreenRouter() {\r\n    return (\r\n        <>color={color === \"rgb(0, 122, 255)\" ? \"#001f54\" : color}\r\n            <NavigationContainer>\r\n                <Tab.Navigator tabBarOptions={{acticeTintColor:\"#001f54\",ina}}>\r\n                    <Tab.Screen name={routes.clockinout.name} options={{\r\n                        title: routes.clockinout.title, tabBarIcon: ({ color, size }) => (\r\n                            <MaterialCommunityIcons name=\"clock\"  size={size} />\r\n                        ),\r\n                    }} >\r\n                        {(props) => <ClockInOutScreen {...props} />}\r\n                    </Tab.Screen>\r\n                    <Tab.Screen name={routes.history.name} options={{\r\n                        title: routes.history.title, tabBarIcon: ({ color, size }) => (\r\n                            <MaterialCommunityIcons name=\"history\"  size={size} />\r\n                        ),\r\n                    }} >\r\n                        {(props) => <HistoryScreen {...props} />}\r\n                    </Tab.Screen>\r\n                    <Tab.Screen name={routes.dashboard.name} options={{\r\n                        title: routes.dashboard.title, tabBarIcon: ({ color, size }) => (\r\n                            <MaterialCommunityIcons   name=\"view-dashboard\"  size={size} />\r\n                        ),\r\n                    }} >\r\n                        {(props) => <DashboardScreen {...props} />}\r\n                    </Tab.Screen>\r\n                </Tab.Navigator>\r\n            </NavigationContainer>\r\n        </>\r\n    );\r\n}"],"mappings":";;;AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,gBAAgB;AACvB,SAASC,MAAM;AACf,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,sBAAsB;AAC7B,OAAOC,eAAe;AACtB,OAAOC,aAAa;AACpB,SAASC,MAAM,EAAEC,IAAI,QAAQ,oBAAoB;AAAC;AAAA;AAAA;AAGlD,IAAMC,GAAG,GAAGN,wBAAwB,EAAE;AAEtC,eAAe,SAASO,yBAAyB,GAAG;EAChD,OACI;IAAA,qBAASC,KAAK,KAAK,kBAAkB,GAAG,SAAS,GAAGA,KAAK,EACrD,KAAC,mBAAmB;MAAA,UAChB,MAAC,GAAG,CAAC,SAAS;QAAC,aAAa,EAAE;UAACC,eAAe,EAAC,SAAS;UAACC,GAAG,EAAHA;QAAG,CAAE;QAAA,WAC1D,KAAC,GAAG,CAAC,MAAM;UAAC,IAAI,EAAEX,MAAM,CAACY,UAAU,CAACC,IAAK;UAAC,OAAO,EAAE;YAC/CC,KAAK,EAAEd,MAAM,CAACY,UAAU,CAACE,KAAK;YAAEC,UAAU,EAAE;cAAA,IAAGN,KAAK,QAALA,KAAK;gBAAEO,IAAI,QAAJA,IAAI;cAAA,OACtD,KAAC,sBAAsB;gBAAC,IAAI,EAAC,OAAO;gBAAE,IAAI,EAAEA;cAAK,EAAG;YAAA;UAE5D,CAAE;UAAA,UACG,kBAACC,KAAK;YAAA,OAAK,KAAC,gBAAgB,oBAAKA,KAAK,EAAI;UAAA;QAAA,EAClC,EACb,KAAC,GAAG,CAAC,MAAM;UAAC,IAAI,EAAEjB,MAAM,CAACkB,OAAO,CAACL,IAAK;UAAC,OAAO,EAAE;YAC5CC,KAAK,EAAEd,MAAM,CAACkB,OAAO,CAACJ,KAAK;YAAEC,UAAU,EAAE;cAAA,IAAGN,KAAK,SAALA,KAAK;gBAAEO,IAAI,SAAJA,IAAI;cAAA,OACnD,KAAC,sBAAsB;gBAAC,IAAI,EAAC,SAAS;gBAAE,IAAI,EAAEA;cAAK,EAAG;YAAA;UAE9D,CAAE;UAAA,UACG,kBAACC,KAAK;YAAA,OAAK,KAAC,aAAa,oBAAKA,KAAK,EAAI;UAAA;QAAA,EAC/B,EACb,KAAC,GAAG,CAAC,MAAM;UAAC,IAAI,EAAEjB,MAAM,CAACmB,SAAS,CAACN,IAAK;UAAC,OAAO,EAAE;YAC9CC,KAAK,EAAEd,MAAM,CAACmB,SAAS,CAACL,KAAK;YAAEC,UAAU,EAAE;cAAA,IAAGN,KAAK,SAALA,KAAK;gBAAEO,IAAI,SAAJA,IAAI;cAAA,OACrD,KAAC,sBAAsB;gBAAG,IAAI,EAAC,gBAAgB;gBAAE,IAAI,EAAEA;cAAK,EAAG;YAAA;UAEvE,CAAE;UAAA,UACG,kBAACC,KAAK;YAAA,OAAK,KAAC,eAAe,oBAAKA,KAAK,EAAI;UAAA;QAAA,EACjC;MAAA;IACD,EACE;EAAA,EACvB;AAEX"},"metadata":{},"sourceType":"module"}