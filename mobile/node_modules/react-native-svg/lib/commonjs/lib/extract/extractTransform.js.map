{"version":3,"names":["appendTransformProps","props","x","y","originX","originY","scaleX","scaleY","rotation","skewX","skewY","appendTransform","universal2axis","universal","axisX","axisY","defaultValue","coords","split","length","Array","isArray","isNaN","transformsArrayToProps","transformObjectsArray","forEach","transformObject","keys","Object","console","error","key","value","props2transform","extractedProps","translate","translateX","translateY","origin","scale","skew","warn","tr","or","sc","sk","transformToMatrix","transform","reset","columnMatrix","append","transformProps","t","parse","e","toArray","extractTransform","identity"],"sources":["extractTransform.ts"],"sourcesContent":["import { TransformsStyle } from 'react-native';\nimport { append, appendTransform, identity, reset, toArray } from '../Matrix2D';\nimport { parse } from './transform';\nimport {\n  ColumnMajorTransformMatrix,\n  NumberProp,\n  TransformedProps,\n  TransformProps,\n} from './types';\n\nfunction appendTransformProps(props: TransformedProps) {\n  const { x, y, originX, originY, scaleX, scaleY, rotation, skewX, skewY } =\n    props;\n  appendTransform(\n    x + originX,\n    y + originY,\n    scaleX,\n    scaleY,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n  );\n}\n\nfunction universal2axis(\n  universal: NumberProp | NumberProp[] | undefined,\n  axisX: NumberProp | void,\n  axisY: NumberProp | void,\n  defaultValue?: number,\n): [number, number] {\n  let x;\n  let y;\n  if (typeof universal === 'number') {\n    x = y = universal;\n  } else if (typeof universal === 'string') {\n    const coords = universal.split(/\\s*,\\s*/);\n    if (coords.length === 2) {\n      x = +coords[0];\n      y = +coords[1];\n    } else if (coords.length === 1) {\n      x = y = +coords[0];\n    }\n  } else if (Array.isArray(universal)) {\n    if (universal.length === 2) {\n      x = +universal[0];\n      y = +universal[1];\n    } else if (universal.length === 1) {\n      x = y = +universal[0];\n    }\n  }\n\n  axisX = +axisX;\n  if (!isNaN(axisX)) {\n    x = axisX;\n  }\n\n  axisY = +axisY;\n  if (!isNaN(axisY)) {\n    y = axisY;\n  }\n\n  return [x || defaultValue || 0, y || defaultValue || 0];\n}\n\nexport function transformsArrayToProps(\n  transformObjectsArray: TransformsStyle['transform'],\n) {\n  const props: TransformProps = {};\n  transformObjectsArray?.forEach((transformObject) => {\n    const keys = Object.keys(transformObject);\n    if (keys.length !== 1) {\n      console.error(\n        'You must specify exactly one property per transform object.',\n      );\n    }\n    const key = keys[0] as keyof TransformProps;\n    const value = transformObject[key as keyof typeof transformObject];\n    props[key] = value;\n  });\n  return props;\n}\n\nexport function props2transform(\n  props: TransformProps | undefined,\n): TransformedProps | null {\n  if (!props) {\n    return null;\n  }\n  const extractedProps = Array.isArray(props)\n    ? transformsArrayToProps(props)\n    : props;\n  const {\n    rotation,\n    translate,\n    translateX,\n    translateY,\n    origin,\n    originX,\n    originY,\n    scale,\n    scaleX,\n    scaleY,\n    skew,\n    skewX,\n    skewY,\n    x,\n    y,\n  } = extractedProps;\n  if (\n    rotation == null &&\n    translate == null &&\n    translateX == null &&\n    translateY == null &&\n    origin == null &&\n    originX == null &&\n    originY == null &&\n    scale == null &&\n    scaleX == null &&\n    scaleY == null &&\n    skew == null &&\n    skewX == null &&\n    skewY == null &&\n    x == null &&\n    y == null\n  ) {\n    return null;\n  }\n\n  if (Array.isArray(x) || Array.isArray(y)) {\n    console.warn(\n      'Passing SvgLengthList to x or y attribute where SvgLength expected',\n    );\n  }\n  const tr = universal2axis(\n    translate,\n    translateX || (Array.isArray(x) ? x[0] : x),\n    translateY || (Array.isArray(y) ? y[0] : y),\n  );\n  const or = universal2axis(origin, originX, originY);\n  const sc = universal2axis(scale, scaleX, scaleY, 1);\n  const sk = universal2axis(skew, skewX, skewY);\n\n  return {\n    rotation: rotation == null ? 0 : +rotation || 0,\n    originX: or[0],\n    originY: or[1],\n    scaleX: sc[0],\n    scaleY: sc[1],\n    skewX: sk[0],\n    skewY: sk[1],\n    x: tr[0],\n    y: tr[1],\n  };\n}\n\nexport function transformToMatrix(\n  props: TransformedProps | null,\n  transform: TransformProps['transform'],\n): ColumnMajorTransformMatrix | null {\n  if (!props && !transform) {\n    return null;\n  }\n  reset();\n  props && appendTransformProps(props);\n\n  if (transform) {\n    if (Array.isArray(transform)) {\n      if (typeof transform[0] === 'number') {\n        const columnMatrix = transform as ColumnMajorTransformMatrix;\n        append(\n          columnMatrix[0],\n          columnMatrix[1],\n          columnMatrix[2],\n          columnMatrix[3],\n          columnMatrix[4],\n          columnMatrix[5],\n        );\n      } else {\n        const transformProps = props2transform(\n          transformsArrayToProps(transform as TransformsStyle['transform']),\n        );\n        transformProps && appendTransformProps(transformProps);\n      }\n    } else if (typeof transform === 'string') {\n      try {\n        const t = parse(transform);\n        append(t[0], t[3], t[1], t[4], t[2], t[5]);\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      const transformProps = props2transform(transform);\n      transformProps && appendTransformProps(transformProps);\n    }\n  }\n\n  return toArray();\n}\n\nexport default function extractTransform(\n  props: TransformProps | TransformProps['transform'],\n): ColumnMajorTransformMatrix | null {\n  if (Array.isArray(props) && typeof props[0] === 'number') {\n    return props as ColumnMajorTransformMatrix;\n  }\n  if (typeof props === 'string') {\n    try {\n      const t = parse(props);\n      return [t[0], t[3], t[1], t[4], t[2], t[5]];\n    } catch (e) {\n      console.error(e);\n      return identity;\n    }\n  }\n  // this type is not correct since props can be of type TransformsStyle['transform'] too\n  // but it satisfies TS and should not produce any type errors\n  const transformProps = props as TransformProps;\n  return transformToMatrix(\n    props2transform(transformProps),\n    transformProps?.transform,\n  );\n}\n"],"mappings":"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"}